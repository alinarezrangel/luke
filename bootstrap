#!/bin/sh
# Luke bootstrap script.
#
# Copyright (C) 2010, 2011 Gary V. Vaughan
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Shell tools
: ${CC='gcc'}
: ${RM='rm'}
: ${SED='sed'}

# Constants
sed_escape_lua='s|\\|\\\\|g;s|"|\\"|g;s|	|\\t|g;s|$|\\n\\|g'
DEBUG=
DEBUG=-DDEBUG			# don't minify luke.lua and modules

# Error message
E () {
  echo luke: $*>&2
}

# Output Lua modules as preloaded packages in a single file
squish () {
  for p in lpath
  do
    # Preload packages used by luke.lua
    echo "package.preload['$p'] = (function ()"
    cat src/$p.lua
    echo 'end)'
  done

  # escape luke.lua
  cat src/luke.lua
}

# Determine target type
for i in arch machine "uname -m"
do
  A=`$i 2>/dev/null`
  if test $? -eq 0&&test -n "$A"
  then
    break
  fi
done

if test $? -ne 0||test -z "$A"
then
  E unable to determine target type, proceeding anyway
  A=unknown
fi

exe=.luke-$A			# actual luke executable for this target
D=${TMPDIR-"/tmp"}/luke-$$.d	# bootstrap dir
mkdir $D&&trap "test '$D' != .&&$RM -rf $D" 0 1 2 13 15||{
  D=.
  E unable to create temporary dir, using "'.'"
}
E building custom lua...

# Convert lua code into C buffer in a header file
{
  echo 'static const char lukebuf [] = "\\n\\'
  squish | $SED "$sed_escape_lua"
  echo '";'
} >$D/luke.h

set -e				# tool errors are fatal from here

# Compile bootstrap executable
$CC $DEBUG -o $exe -I $D -I src -I src/lua src/luke.c
test -x $exe||{
  E bootstrap failed.
  exit 1
}


# Build the self extracting script from the default Blueprint rule
E bootstrapping luke...
squish | tee $D/stdin.lua | ./$exe	# DEBUG builds read lua from stdin

E rebuilding compressed luke with itself...
chmod 755 luke			# Should make itself executable!
./luke

# Run the testsuite
exec ./luke -q check
